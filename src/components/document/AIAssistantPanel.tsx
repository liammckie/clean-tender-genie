
import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Card } from '@/components/ui/card';
import { toast } from 'sonner';

interface AIAssistantPanelProps {
  documentContent: string;
  setDocumentContent: (content: string) => void;
}

const AIAssistantPanel: React.FC<AIAssistantPanelProps> = ({
  documentContent,
  setDocumentContent,
}) => {
  const [prompt, setPrompt] = useState('');
  const [suggestions, setSuggestions] = useState<string[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  
  // Common prompts for document editing
  const commonPrompts = [
    "Summarize this section",
    "Make this paragraph more concise",
    "Improve the tone to be more professional",
    "Add compliance information about WHS standards",
    "Generate section about our environmental initiatives",
  ];

  const generateContent = async () => {
    if (prompt.trim() === '') {
      toast.error("Please enter a prompt");
      return;
    }

    setIsLoading(true);

    // In a real application, you would call your LLM API here
    // This is a mock implementation
    try {
      // Simulate API call delay
      await new Promise(resolve => setTimeout(resolve, 1500));
      
      // Mock response based on prompt
      let response = "";
      if (prompt.toLowerCase().includes("summarize")) {
        response = "## Executive Summary\n\nOur company offers industry-leading commercial cleaning services with a focus on quality, compliance with Australian WHS standards, and environmental sustainability. With over 15 years of experience, we deliver tailored solutions that meet the specific requirements of your facilities.";
      } else if (prompt.toLowerCase().includes("whs") || prompt.toLowerCase().includes("compliance")) {
        response = "## Compliance Information\n\nOur operations strictly adhere to all relevant Work Health and Safety legislation, including the Work Health and Safety Act 2011 and associated regulations. All staff undergo comprehensive training and certification in safe work practices, chemical handling, and emergency procedures. We maintain detailed documentation of all safety protocols and incident reporting systems.";
      } else if (prompt.toLowerCase().includes("environment")) {
        response = "## Environmental Initiatives\n\nOur company is committed to sustainable cleaning practices. We use eco-friendly, biodegradable cleaning products certified by Good Environmental Choice Australia (GECA). Our waste management protocols ensure minimal environmental impact, with recycling programs and water conservation measures implemented across all operations.";
      } else {
        response = "## Generated Content\n\nThis is a professionally generated response to your prompt. In a real implementation, this would be generated by an AI language model based on your specific request. The content would be tailored to your document's context and the specific requirements of your business.";
      }
      
      setSuggestions([...suggestions, response]);
    } catch (error) {
      console.error("Error generating content:", error);
      toast.error("Failed to generate content. Please try again.");
    } finally {
      setIsLoading(false);
    }
  };

  const insertContent = (content: string) => {
    setDocumentContent(documentContent + "\n\n" + content);
    toast.success("Content inserted into document");
  };

  const handleCommonPromptClick = (promptText: string) => {
    setPrompt(promptText);
  };

  return (
    <div className="p-4 h-full flex flex-col">
      <h2 className="font-semibold mb-4">AI Assistant</h2>
      
      <div className="flex flex-wrap gap-2 mb-4">
        {commonPrompts.map((promptText, index) => (
          <Button 
            key={index} 
            variant="outline" 
            size="sm" 
            onClick={() => handleCommonPromptClick(promptText)}
          >
            {promptText}
          </Button>
        ))}
      </div>
      
      <div className="flex gap-2 mb-4">
        <Textarea
          value={prompt}
          onChange={(e) => setPrompt(e.target.value)}
          placeholder="Enter a prompt for the AI assistant..."
          className="min-h-[80px]"
        />
        <Button 
          onClick={generateContent}
          disabled={isLoading}
          className="whitespace-nowrap"
        >
          {isLoading ? "Generating..." : "Generate"}
        </Button>
      </div>
      
      <div className="flex-grow overflow-auto">
        {suggestions.length === 0 ? (
          <p className="text-gray-500 text-center">No suggestions yet</p>
        ) : (
          <div className="space-y-4">
            {suggestions.map((suggestion, index) => (
              <Card key={index} className="p-3">
                <pre className="whitespace-pre-wrap text-sm mb-2">{suggestion}</pre>
                <Button 
                  onClick={() => insertContent(suggestion)}
                  size="sm"
                  className="w-full"
                >
                  Insert into Document
                </Button>
              </Card>
            ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default AIAssistantPanel;
